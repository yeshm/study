
buildscript {
    ext {
        springBootVersion = '2.0.4.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.5'
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

def grpcVersion = '1.15.0'
def protocVersion = '3.5.1'
def springBootVersion = '2.0.4.RELEASE'

repositories {
    //maven { // The google mirror is less flaky than mavenCentral()
    //    url "https://maven-central.storage-download.googleapis.com/repos/central/data/" }
    mavenCentral()
    mavenLocal()
}

apply plugin: 'java'
apply plugin: 'com.google.protobuf'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

dependencies {

    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile 'org.springframework.boot:spring-boot-starter-web'

    compile "study.yeshm:grpc-spring-boot-starter:2.4.2-SNAPSHOT"

    testCompile 'org.springframework.boot:spring-boot-starter-aop'
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

// Inform IDEs like IntelliJ IDEA, Eclipse or NetBeans about the generated code.
sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

//bootJar.enabled  =false

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-starter-parent:${springBootVersion}"
    }
}

task(runClient, dependsOn: 'classes', type: JavaExec) {
    main = 'study.yeshm.springboot.grpc.demo.HelloWorldClient'
    classpath = sourceSets.main.runtimeClasspath
}
